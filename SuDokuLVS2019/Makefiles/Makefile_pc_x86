# Usage: In MSYS2 MinGW 32-bit shell, `make`

# ─── Directories & Target ────────────────────────────────────────────────────
OBJ_DIR    := build_win32
EXE        := sudokul_win32.exe

SRC_DIR    := src
SRCS       := $(filter-out , \
               $(wildcard $(SRC_DIR)/*.cpp) \
               $(wildcard $(SRC_DIR)/fonts_include/*.cpp) \
               $(wildcard $(SRC_DIR)/graphics_include/all_res/*.cpp) \
               $(wildcard $(SRC_DIR)/graphics_include/normal_res/*.cpp) \
               $(wildcard $(SRC_DIR)/music_include/*.cpp) \
               $(wildcard $(SRC_DIR)/sfx_include/*.cpp) \
              )
OBJS       := $(SRCS:%.cpp=$(OBJ_DIR)/%.o)

RES_RC     := resource.rc
RES_OBJ    := $(OBJ_DIR)/resource.o

# ─── Toolchain & Flags ───────────────────────────────────────────────────────
CXX        := i686-w64-mingw32-g++
PKG        := pkgconf

# Optimize-for-size, warnings, C++11, platform defines,
# per-function/data sections + LTO + no RTTI/exceptions,
# plus SDL2 include flags (static).
CXXFLAGS   := -Os -Wall -Wextra -std=gnu++11 \
              -DPC -D_WIN32 -DMOUSE_INPUT \
              -ffunction-sections -fdata-sections -flto=4 -fno-rtti -fno-exceptions \
              $(shell $(PKG) --static --cflags sdl2)

# Static link against libstdc++, libgcc, SDL2 + extensions + gc-sections + strip + LTO
LDFLAGS    := -static -static-libgcc -static-libstdc++ \
              $(shell $(PKG) --static --libs sdl2 SDL2_image SDL2_mixer SDL2_ttf) \
              -Wl,--gc-sections -s -flto

# ─── Build Rules ──────────────────────────────────────────────────────────────
.PHONY: all clean

all: $(EXE)

$(EXE): $(OBJS) $(RES_OBJ)
	$(CXX) $(OBJS) $(RES_OBJ) $(CXXFLAGS) $(LDFLAGS) -o $@

$(OBJ_DIR)/%.o: %.cpp
	mkdir -p $(dir $@)
	$(CXX) -c $< $(CXXFLAGS) -o $@

$(RES_OBJ): $(RES_RC)
	mkdir -p $(dir $@)
	windres $< -O coff -o $@

clean:
	rm -rf $(OBJ_DIR) $(EXE)
